package com.cleartrip.air.in.search;

import static com.jayway.restassured.RestAssured.given;
import static org.testng.Assert.assertEquals;
import java.io.IOException;
import java.util.HashMap;

import org.apache.http.client.protocol.RequestDefaultHeaders;
//import java.util.concurrent.TimeUnit;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;
import com.cleartrip.air.common.AirCommonUtil;
import com.cleartrip.common.RestUtil;
import com.cleartrip.common.dataproviders.AirInDataProvider;
import com.jayway.restassured.RestAssured;
import com.jayway.restassured.parsing.Parser;
import com.jayway.restassured.response.Response;

public class IntlMultiCitySearchTest extends AirCommonUtil{

@Test(groups = {"Regression","Smoke"},dataProviderClass=AirInDataProvider.class, dataProvider="intlmcsssearch")
public void Intl_mc_Search(HashMap<String, Object> params) throws IOException{

	Response resp;
	RestAssured.defaultParser = Parser.JSON;
	String onwarddate1=putDate(getAirData("onwardsearch_date"));
	String onwarddate2=putDate(getAirData("returnsearch_date"));

	try {

		HashMap<String, Object> commonUrlProperties = new HashMap<String,Object>();
		commonUrlProperties = commonAir("mcflightsearch", "get", false);

		HashMap<String, Object> headers = new HashMap<String,Object>();

		params.put("depart_date_1",onwarddate1);
		params.put("depart_date_2",onwarddate2);
		headers.put("Referer", "https://");

		resp = RestUtil.httpMethod(params,commonUrlProperties,headers);
		Assert.assertEquals(resp.statusCode(),200, Thread.currentThread().getStackTrace()[1].getMethodName() + " is FAILED");

		farekeypricecheck(resp);

		Reporter.log(Thread.currentThread().getStackTrace()[1].getMethodName() + " is completed",true);

	}catch (Exception e)

	{
		Reporter.log(e + Thread.currentThread().getStackTrace()[1].getMethodName() + " is FAILED",true);
		 Assert.fail("*****  REPONSE RETURNED HAVE NO RESULTS *****");

	}
}}