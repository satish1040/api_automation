package com.cleartrip.air.in.booking;


	
	import static com.jayway.restassured.RestAssured.given;
import static org.testng.Assert.assertEquals;
	import java.io.IOException;
	import java.util.HashMap;
	//import java.util.concurrent.TimeUnit;
	import org.testng.Assert;
	import org.testng.Reporter;
	import org.testng.annotations.Test;
	import com.cleartrip.air.common.AirCommonUtil;
	import com.cleartrip.common.RestUtil;
	import com.cleartrip.common.dataproviders.AirInDataProvider;
	import com.jayway.restassured.RestAssured;
	import com.jayway.restassured.parsing.Parser;
	import com.jayway.restassured.response.Response;

	public class TestBooking_Script extends AirCommonUtil {
		
		@Test(groups = {"Regression","booking"},dataProviderClass=AirInDataProvider.class, dataProvider="domowsearch")  //dependsOnMethods={"com.cleartrip.air.in.search.DomOneWaySearchTest.Domestic_OneWay_Search"},
		
		public void Domestic_OneWay_Booking(HashMap<String, Object> params) throws IOException{{
			
			Response resp, itinerary;
		
			RestAssured.defaultParser = Parser.JSON;
			String onwarddate=putDate(getAirData("onwardsearch_date"));
					
			
	        	
				HashMap<String, Object> commonUrlProperties = new HashMap<String,Object>();
				commonUrlProperties = commonAir("flightsearch", "get", false);
				
				HashMap<String, Object> headers = new HashMap<String,Object>();
				
				params.put("depart_date",onwarddate);
				
				resp = RestUtil.httpMethod(params,commonUrlProperties,headers);
				Assert.assertEquals(resp.statusCode(),200, Thread.currentThread().getStackTrace()[1].getMethodName() + " is FAILED");
				
				String dfd = resp.then().extract().path("fare.1.dfd");
				
				String fareKey = resp.then().extract().path("fare.1."+dfd+".fk");
				Reporter.log("fareKey: "+" - " +fareKey,true);

				String price = resp.then().extract().path("fare.1."+dfd+".pr").toString().split("\\.")[0];
				Reporter.log("price: "+" - " +price,true);
				
				Reporter.log(Thread.currentThread().getStackTrace()[1].getMethodName() + " is completed",true);
				
			System.out.println("++++++ BOOKING CASE STARTED +++++++");
			
			//AirCommonUtil ac = new AirCommonUtil();
				
						
			HashMap<String, Object> book = new HashMap<String,Object>();
			
			params.put("out_fare_key", fareKey);
			params.put("out_price", price);
			book = commonAir("createitinerary", "post", false);
			resp = RestUtil.httpMethod(params,book,headers);
			
			
		
		

	}
		}}



