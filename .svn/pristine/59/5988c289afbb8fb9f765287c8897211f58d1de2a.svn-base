package com.cleartrip.agency.air.search;

import static com.jayway.restassured.RestAssured.given;
import static org.testng.Assert.assertEquals;

import java.io.IOException;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;

import com.cleartrip.air.common.AirCommonUtil;
import com.cleartrip.common.RestUtil;
import com.cleartrip.common.dataproviders.AgencyAirDataProvider;
import com.cleartrip.common.dataproviders.AirInDataProvider;
import com.jayway.restassured.RestAssured;
import com.jayway.restassured.parsing.Parser;
import com.jayway.restassured.response.Response;

public class AgencyIntlRoundTripSearchTest  extends AirCommonUtil{

	@Test(groups = {"Regression","Search"},dataProviderClass=AgencyAirDataProvider.class, dataProvider="intlrtsssearch")
	public void AgencyIntlRoundTripSearch(HashMap<String, Object> params) throws IOException{{
		
			Response resp;
			RestAssured.defaultParser = Parser.JSON;
			String departdate=putDate(getAirData("onwardsearch_date"));
			String returndate=putDate(getAirData("returnsearch_date"));

			try {
				
				HashMap<String, Object> commonUrlProperties = new HashMap<String,Object>();
				commonUrlProperties = agencyAir("flightsearch", "get", false);

				HashMap<String, Object> headers = new HashMap<String,Object>();

				params.put("depart_date",departdate);
				params.put("return_date",returndate);
				headers.put("Referer", "https://");
				//headers.put("Content-Type","text/plain;charset=UTF-8");

				resp = RestUtil.b2bhttpMethod(params,commonUrlProperties,headers);
				Assert.assertEquals(resp.statusCode(),200, Thread.currentThread().getStackTrace()[1].getMethodName() + " is FAILED");

				farekeypricecheck(resp);

				Reporter.log(Thread.currentThread().getStackTrace()[1].getMethodName() + " is completed",true);

			}catch (Exception e)

			{
				Reporter.log(e + Thread.currentThread().getStackTrace()[1].getMethodName() + " is FAILED",true);
				Assert.fail("*****  REPONSE RETURNED HAVE NO RESULTS *****");

			}
	}}}

