package com.cleartrip.common.dataproviders;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;

import org.testng.annotations.DataProvider;

import com.cleartrip.common.PropertyUtil;

public class AirInDataProvider extends PropertyUtil {
	
	//data - from, to, carrier, adult,child,infant,class
	/*@DataProvider(name="domows")
	public static Object[][] ows(){
		return new Object[][]{
		{"BOM","BLR","","1","0","0","Economy"}
		};
	}*/

	@DataProvider(name="domowsearch1")
	public Object[][] ows() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("fromcity"));
		params.put("to", getAirData("tocity"));
		params.put("carrier", "6E");
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("class"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		
		String [] airlines={"6E","SG","G8"};
		
		
//		HashMap<Object,HashMap> map = new HashMap<Object,HashMap>();
		Object ows[][] = new Object[airlines.length][1];
			
		int index = 0;
		for(String carrier : airlines) {
			HashMap<String, Object> map= new HashMap<String, Object>(params);
			ows[index][0] = map;
			map.put("carrier",carrier);
			index++;
		}
		 
		return ows;
	}
	
	
	@DataProvider(name="domowsearch")
	public Object[][] owsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("fromcity"));
		params.put("to", getAirData("tocity"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		
		return new Object[][]{{params}};
	}

	@DataProvider(name="domowbusinessclasssearch")
	public Object[][] owbusinesssearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("fromcity"));
		params.put("to", getAirData("tocity"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("businessclass"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		
		return new Object[][]{{params}};
	}
	
	@DataProvider(name="domrtsssearch")
	public Object[][] rtsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("fromcity"));
		params.put("to", getAirData("tocity"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		
		return new Object[][]{{params}};
	}
	
	@DataProvider(name="intlowsearch")
	public Object[][] intlsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("intlfromcity"));
		params.put("to", getAirData("intltocity"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		params.put("intl", getAirData("intl"));
		
		return new Object[][]{{params}};
	}
	
	@DataProvider(name="intlrtsssearch")
	public Object[][] intlrtsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from", getAirData("intlfromcity"));
		params.put("to", getAirData("intltocity"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("ver", getAirData("ver"));
		params.put("intl", getAirData("intl"));
		
		return new Object[][]{{params}};
	}
	
	@DataProvider(name="domowbs")
	public static Object[][] owbs(){
		return new Object[][]{
		{"BOM","BLR","SG","1","0","0","Business"},
		{"BOM","DEL","6E","1","0","0","Economy"},
		{"BOM","MAA","G8","1","0","0","Business"},
		
		};
	}

		
	@DataProvider(name="dommcsssearch")
	public Object[][] mcsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from1", getAirData("fromcity1"));
		params.put("to1", getAirData("tocity1"));
		params.put("from2", getAirData("fromcity2"));
		params.put("to2", getAirData("tocity2"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("multicity", getAirData("multicity"));
		params.put("ver", getAirData("ver"));
		
		return new Object[][]{{params}};
	}
	
	@DataProvider(name="intlmcsssearch")
	public Object[][] mcintlsearch() throws IOException{
		HashMap<String, Object> params = new HashMap<String,Object>();
		params.put("from1", getAirData("intlfromcity1"));
		params.put("to1", getAirData("intltocity1"));
		params.put("from2", getAirData("intlfromcity2"));
		params.put("to2", getAirData("intltocity2"));
		params.put("carrier", getAirData("carrier"));
		params.put("adults", getAirData("adultpax"));
		params.put("childs", getAirData("childpax"));
		params.put("infants", getAirData("infantpax"));
		params.put("class", getAirData("defaultclass"));
		params.put("type", getAirData("type"));
		params.put("multicity", getAirData("multicity"));
		params.put("ver", getAirData("ver"));
		params.put("intl", getAirData("intl"));
		
		return new Object[][]{{params}};
	}
	
	
}
